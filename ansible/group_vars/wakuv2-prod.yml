---
# Custom SSH accounts for Nimbus fleet, should start from UID 8000.
bootstrap__active_extra_users:
  - { name: hanno,   uid: 8003, admin: true, key: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDDlvmNGKxoddAmOuXvjm0II0M82aLjczb8F1ZTSV7zyvKaw6DNuaN6c6ZCdUvdjfF4hdEwMXNB37Cr5oysPo41rIuii+RVPd+c2WLZnC/MCg8d6b0/mREIfpuEMlz+u4lyr8/DST7zO4Ke95w5kVGtlh2kR88F9mlJlkyq2NCiqBU/blKObOjqS8OMRuMJ0GpwzF9+/dfXVahzdgHgKS0Q1ATvLHL0DvZSAGwHfHcIV5nF0ddRCofX4L2shIImZk5dAsATQTkT2gNWObhF6KuWbVyuhsLfRletzdnf8jUYm9Uatf7Woa9CxbPjdGxVxniZblmOumcaCNgaioKs0qeZzwNQmgJ/PXXw9uVWhDUYvNh7Cz+SNTVm4WG1tEk3WO9EU5dcCTgfEa94LUl5G+yXYX8H00spubpiWXv/0RjEQX4CZeu0pff209GLDWdpIaV8p9QVFBr8X8t8jw5zw5j/PxkprcT5P2A1t+WOUn9LrBzOJ1iAU3oJV3ZMYQhUS78= hanno@status.im' }

# Tag dependent on fleet: test, prod
nim_waku_cont_tag: 'deploy-v2-{{ stage }}'
nim_waku_cont_name: 'nim-waku-v2'
nim_waku_protocols_enabled: ['relay', 'store', 'filter', 'lightpush']
nim_waku_disc_v5_enabled: true
nim_waku_dns4_domain_name: '{{ dns_entry }}'
nim_waku_node_key: '{{lookup("bitwarden", "fleets/wakuv2/"+stage+"/nodekeys", field=hostname)}}'

# Ports
nim_waku_p2p_tcp_port: 30303
nim_waku_p2p_udp_port: 30303
nim_waku_metrics_port: 8008
nim_waku_disc_v5_port: 9000
nim_waku_websock_port: 8000
nim_waku_rpc_tcp_port: 8545
nim_waku_rpc_tcp_addr: 0.0.0.0

# Limits
nim_waku_p2p_max_connections: 150

# SQLite store
nim_waku_sqlite_store: false
nim_waku_sqlite_retention_time: 2592000 # 30 days

# DNS Discovery
nim_waku_dns_disc_enabled: true
nim_waku_dns_disc_url: 'enrtree://AOGECG2SPND25EEFMAJ5WF3KSGJNSGV356DSTL2YVLLZWIV6SAYBM@prod.waku.nodes.status.im'

# Enable websockets in Waku
nim_waku_websocket_enabled: true
nim_waku_websocket_secure_enabled: true
nim_waku_websocket_domain: '{{ dns_entry }}'
nim_waku_websocket_ssl_dir: '/etc/letsencrypt'
nim_waku_websocket_ssl_cert: '/etc/letsencrypt/live/{{ nim_waku_websocket_domain }}/fullchain.pem'
nim_waku_websocket_ssl_key: '/etc/letsencrypt/live/{{ nim_waku_websocket_domain }}/privkey.pem'

# Enable WebSockets via Websockify
nim_waku_websockify_enabled: true
nim_waku_websockify_cont_port: 443
nim_waku_websockify_domain: '{{ nim_waku_websocket_domain }}'
nim_waku_websockify_ssl_dir: '{{ nim_waku_websocket_ssl_dir }}'
nim_waku_websockify_ssl_cert: '{{ nim_waku_websocket_ssl_cert }}'
nim_waku_websockify_ssl_key: '{{ nim_waku_websocket_ssl_key }}'

# Consul Service
nim_waku_consul_success_before_passing: 2
nim_waku_consul_failures_before_warning: 2
nim_waku_consul_failures_before_critical: 10

# Peer connecting
waku_peers_rpc_port: '{{ nim_waku_rpc_tcp_port }}'
waku_peers_rpc_timeout: 20
waku_peers_rpc_retries: 5
waku_peers_consul_services:
  - { name: '{{ nim_waku_cont_name }}', env: '{{ env }}',  stage: '{{ stage }}' }

# LetsEncrypt via Certbot
certbot_docker_enabled: true
certbot_admin_email: 'devops@status.im'
certbot_certs:
  - domains: [ '{{ nim_waku_websockify_domain }}' ]

# Open LibP2P Ports
open_ports_default_comment: '{{ nim_waku_cont_name }}'
open_ports_default_chain: 'SERVICES'
open_ports_default_protocol: 'tcp'
open_ports_list_base:
  - { port: '{{ nim_waku_p2p_udp_port }}', protocol: 'udp' }
  - { port: '{{ nim_waku_p2p_tcp_port }}' }
  - { port: '{{ nim_waku_disc_v5_port }}', protocol: 'udp' }
  - { port: '{{ nim_waku_websock_port }}' }
  - { port: '{{ nim_waku_websockify_cont_port }}' }
  - { port: '80', comment: 'Certbot verification' }
  - { port: '{{ nim_waku_metrics_port }}', chain: 'VPN', ipset: 'metrics.hq' }
  - { port: '{{ nim_waku_rpc_tcp_port }}', chain: 'VPN', ipset: '{{ env }}.{{ stage }}' }

# open_ports_list_extra defines ports to open in host_vars
open_ports_list: '{{ open_ports_list_base + open_ports_list_extra|default([]) }}'
