---
nim_waku_cont_tag: latest
nim_waku_cont_image: 'statusteam/nim-waku:{{ nim_waku_cont_tag }}'
nim_waku_cont_name: 'nim-waku'
nim_waku_cont_vol: '/docker/{{ nim_waku_cont_name }}'

# Node database path
nim_waku_node_db_path: '{{ nim_waku_cont_vol }}/data'

# Value for private node key which is used to create public enode key
nim_waku_node_key: ~
nim_waku_node_key_file_path: '{{ nim_waku_cont_vol }}/nodekey'

# WARNING: Enabling this will disable relaying of messages
nim_waku_light_node_enabled: false

# The swap protocol keeps track of the accounting state for each peer. 
# Enabling this will display logs from the swap protocol.
nim_waku_swap_protocol_enabled: true

# Available: error, warn, info, debug
nim_waku_log_level: 'info'

# The eth fleet running status-go node should bootstrap from
nim_waku_bootstrap_fleet: 'test'

# esperimental discovery support
nim_waku_discovery_enabled: false

nim_waku_public_address: '{{ ansible_host }}'
nim_waku_rpc_tcp_addr: '127.0.0.1'
nim_waku_rpc_tcp_port: 8545
nim_waku_p2p_tcp_port: 30303
nim_waku_p2p_udp_port: 30303

# metrics are disabled by default
nim_waku_metrics_enabled: true
nim_waku_metrics_port: 8008

# resource limits, mem in MB
nim_waku_cpu_limit: 0.60
nim_waku_mem_limit: '{{ (ansible_memtotal_mb * 0.6) | int }}'
nim_waku_cpu_reserve: 0.20
nim_waku_mem_reserve: '{{ (ansible_memtotal_mb * 0.2) | int }}'

# container restart policy
nim_waku_restart_condition: 'any'
nim_waku_restart_window_sec: 120

# WebSockets via Websockify
nim_waku_websockify_enabled: false
nim_waku_websockify_verbose: false
nim_waku_websockify_cont_name: 'websockify'
nim_waku_websockify_cont_tag: 'v0.10.0'
nim_waku_websockify_cont_image: 'statusteam/websockify:{{ nim_waku_websockify_cont_tag }}'
nim_waku_websockify_cont_port: 8080
#nim_waku_websockify_domain: 'hostname.example.org'
#nim_waku_websockify_ssl_dir: ~
#nim_waku_websockify_ssl_cert: ~
#nim_waku_websockify_ssl_key: ~

# For querying for fleet peers
consul_url: 'http://localhost:8500/v1/catalog'

# general container management
compose_recreate: 'smart'
compose_state: 'present'
compose_restart: false

#websocket config in nim waku
nim_waku_websocket_enabled: false
nim_waku_websocket_cont_port: 8000
#nim_waku_websocket_domain: 'hostname.example.org'
#nim_waku_websocket_ssl_dir: '/etc/letsencrypt'
#nim_waku_websocket_ssl_cert: '/etc/letsencrypt/live/{{ nim_waku_websocket_domain }}/fullchain.pem'
#nim_waku_websocket_ssl_key: '/etc/letsencrypt/live/{{ nim_waku_websocket_domain }}/privkey.pem'
