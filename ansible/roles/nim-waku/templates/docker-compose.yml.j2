---
version: '3.7'
services:
  node:
    container_name: '{{ nim_waku_cont_name }}'
    image: '{{ nim_waku_cont_image }}'
    restart: 'always'
    labels:
      # auto-updating of docker image
      com.centurylinklabs.watchtower.enable: 'true'
    deploy:
      resources:
        limits:
          cpus: '{{ nim_waku_cpu_limit | float }}'
          memory: '{{ nim_waku_mem_limit }}M'
        reservations:
          memory: '{{ nim_waku_mem_reserve }}M'
      restart_policy:
        condition: '{{ nim_waku_restart_condition }}'
        max_attempts: '{{ nim_waku_restart_max_attempts }}'
    volumes:
      - '{{ nim_waku_node_db_path }}:/data'
    ports:
      - '127.0.0.1:{{ nim_waku_rpc_tcp_port }}:{{ nim_waku_rpc_tcp_port }}/tcp'
      - '{{ nim_waku_p2p_tcp_port }}:{{ nim_waku_p2p_tcp_port }}/tcp'
      - '{{ nim_waku_p2p_udp_port }}:{{ nim_waku_p2p_udp_port }}/udp'
      - '{{ nim_waku_metrics_port }}:{{ nim_waku_metrics_port }}/tcp'
    healthcheck:
      test: ["CMD", "wget", "-qO-", "--header", "Content-type:application/json",
        "--post-data", "{\"id\":1,\"jsonrpc\":\"2.0\",\"method\": \"get_waku_v2_debug_v1_info\",\"params\":[]}",
        "http://127.0.0.1:{{ nim_waku_rpc_tcp_port }}"]
      interval: 10s
      retries: 3
    command: |
{% if "v2" in nim_waku_cont_tag %}
      --store=true
      --relay=true
      --filter=true
      --db-path=/data
      --rpc-admin=true
      --persist-peers=true
      --keep-alive=true
      --persist-messages=true
      --lightpush=true
      --swap={{ nim_waku_swap_protocol_enabled | lower }}
{% else %}
      --discovery={{ nim_waku_discovery_enabled }}
{% endif %}
      --nodekey={{ nim_waku_node_key | mandatory }}
      --nat=extip:{{ nim_waku_public_address }}
      --log-level={{ nim_waku_log_level }}
      --rpc-port={{ nim_waku_rpc_tcp_port }}
      --rpc-address=0.0.0.0
      --tcp-port={{ nim_waku_p2p_tcp_port }}
      --udp-port={{ nim_waku_p2p_udp_port }}
      --metrics-server={{ nim_waku_metrics_enabled }}
      --metrics-server-port={{ nim_waku_metrics_port }}
      --metrics-server-address=0.0.0.0
{% if nim_waku_websockify_enabled %}

  websockify:
    container_name: '{{ nim_waku_websockify_cont_name }}'
    image: '{{ nim_waku_websockify_cont_image }}'
    restart: 'always'
    deploy:
      restart_policy:
        condition: '{{ nim_waku_restart_condition }}'
        max_attempts: '{{ nim_waku_restart_max_attempts }}'
{% if nim_waku_websockify_ssl_cert %}
    volumes:
      - '{{ nim_waku_websockify_ssl_dir }}:{{ nim_waku_websockify_ssl_dir | mandatory }}'
{% endif %}
    ports:
      - '{{ nim_waku_websockify_cont_port }}:{{ nim_waku_websockify_cont_port }}/tcp'
    depends_on:
      - node
    command: |
{% if nim_waku_websockify_verbose %}
      --verbose
{% endif %}
{% if nim_waku_websockify_ssl_cert and nim_waku_websockify_ssl_key %}
      --cert={{ nim_waku_websockify_ssl_cert }}
      --key={{ nim_waku_websockify_ssl_key }}
{% endif %}
      {{ nim_waku_websockify_cont_port }}
      node:{{ nim_waku_p2p_tcp_port }}
{% endif %}
